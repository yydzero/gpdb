# Options
DEBUG_S3_CURL = n
ARCH = $(shell uname -s)

# Flags
CPP = g++
INCLUDES = -Isrc -Iinclude -Ilib -I/usr/include/libxml2
LDFLAGS = -lpthread -lcrypto -lcurl -lxml2 -lz
CPPFLAGS = -O2 -g3 -std=c++98 -Wall -fPIC -DS3_STANDALONE -fprofile-arcs -ftest-coverage

ifeq "$(ARCH)" "Darwin"
	LDFLAGS += -coverage
else
	LDFLAGS += -lgcov
endif

ifeq ($(DEBUG_S3_CURL),y)
	CPPFLAGS += -DDEBUG_S3_CURL
endif

all: test

# Google TEST
TEST_SRC_FILES = test/s3conf_test.cpp test/s3utils_test.cpp test/s3common_test.cpp test/s3log_test.cpp test/s3url_parser_test.cpp test/s3http_headers_test.cpp test/s3thread_test.cpp test/s3bucket_reader_test.cpp test/s3interface_test.cpp test/s3restful_service_test.cpp test/uncompress_reader_test.cpp test/s3key_reader_test.cpp
TEST_OBJS = $(TEST_SRC_FILES:.cpp=.o)
TEST_APP = s3test

DEP_FILES := $(patsubst %.cpp,%.d,$(TEST_SRC_FILES))
-include $(DEP_FILES)

GMOCK_DIR = ../gmock
GTEST_DIR = ../gtest

$(TEST_OBJS) gtest_main.o gtest-all.o gmock-all.o: INCLUDES += -I$(GTEST_DIR)/ -I$(GMOCK_DIR)/ -I$(GTEST_DIR)/src -I$(GMOCK_DIR)/src -I$(GTEST_DIR)/include -I$(GMOCK_DIR)/include

gmock-all.o :
	$(CXX) $(INCLUDES) $(CXXFLAGS) -c $(GMOCK_DIR)/src/gmock-all.cc

gtest-all.o :
	$(CXX) $(INCLUDES) $(CXXFLAGS) -c $(GTEST_DIR)/src/gtest-all.cc

gtest_main.o :
	$(CXX) $(INCLUDES) $(CXXFLAGS) -c $(GTEST_DIR)/src/gtest_main.cc

gtest_main.a : gtest_main.o gtest-all.o gmock-all.o
	$(AR) -rv $@ $^

buildtest: $(TEST_APP)

# Keep gtest_main.a at end, otherwise linker will report undefined symbol error.
$(TEST_APP): $(TEST_OBJS) gtest_main.a
	$(CPP) $^ -o $(TEST_APP) $(LDFLAGS)

%.o: %.cpp
	$(CPP) $(CPPFLAGS) $(INCLUDES) -MMD -MP -c $< -o $@

test: $(TEST_APP)
	-rm -rf *.gcda *.gcov test/*.gcda test/*.gcov
	-@./$(TEST_APP)

coverage: test
	@gcov $(TEST_SRC_FILES) | grep -A 1 "src/.*.cpp"

clean:
	rm -f *.gcov src/*.gcov src/*.gcda src/*.gcno
	rm -f $(TEST_APP) *.so src/*.o src/*.d lib/*.o lib/*.d *.o *.a test/*.o

distclean: clean
	rm -f tags cscope.*

tags:
	ctags --c++-kinds=+p --fields=+iaS --extra=+q src/*.cpp test/*.cpp include/*.h lib/*.cpp lib/*.h
	cscope -bq src/*.cpp test/*.cpp include/*.h lib/*.cpp lib/*.h

lint:
	cppcheck -v --enable=warning src/*.cpp test/*.cpp include/*.h

format:
	clang-format -style="{BasedOnStyle: Google, IndentWidth: 4, ColumnLimit: 100, AllowShortFunctionsOnASingleLine: None}" -i src/*.cpp test/*.cpp include/*.h

.PHONY: buildtest test coverage clean distclean tags lint format
